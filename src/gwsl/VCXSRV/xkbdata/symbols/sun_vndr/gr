//
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Greek (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

	key <TLDE> { [                 grave,     asciitilde,	onehalf ] };
	key <AE01> { [                     1,         exclam ] };
	key <AE02> { [                     2,             at ] };
	key <AE03> { [                     3,     numbersign,	sterling ] };
	key <AE04> { [                     4,         dollar,	EuroSign ] };
	key <AE05> { [                     5,        percent,	EuroSign ] };
	key <AE06> { [                     6,    asciicircum,	notsign ] };
	key <AE07> { [                     7,      ampersand ] };
	key <AE08> { [                     8,       asterisk ] };
	key <AE09> { [                     9,      parenleft ] };
	key <AE10> { [                     0,     parenright,	degree ] };
	key <AE11> { [                 minus,     underscore,	plusminus ] };
	key <AE12> { [                 equal,           plus ] };

	key <AD01> { [             semicolon,          colon,	periodcentered ] };
	key <AD02> { [ Greek_finalsmallsigma, periodcentered,	Greek_SIGMA ] };
	key <AD03> { [         Greek_epsilon,  Greek_EPSILON,	EuroSign ] };
	key <AD04> { [             Greek_rho,      Greek_RHO,	registered ] };
	key <AD05> { [             Greek_tau,      Greek_TAU ] };
	key <AD06> { [         Greek_upsilon,  Greek_UPSILON ] };
	key <AD07> { [           Greek_theta,    Greek_THETA ] };
	key <AD08> { [            Greek_iota,     Greek_IOTA ] };
	key <AD09> { [         Greek_omicron,  Greek_OMICRON ] };
	key <AD10> { [              Greek_pi,       Greek_PI ] };
	key <AD11> { [           bracketleft,      braceleft,	guillemotleft ] };
	key <AD12> { [          bracketright,     braceright,	guillemotright ] };

	key <AC01> { [           Greek_alpha,    Greek_ALPHA ] };
	key <AC02> { [           Greek_sigma,    Greek_SIGMA ] };
	key <AC03> { [           Greek_delta,    Greek_DELTA ] };
	key <AC04> { [             Greek_phi,      Greek_PHI ] };
	key <AC05> { [           Greek_gamma,    Greek_GAMMA ] };
	key <AC06> { [             Greek_eta,      Greek_ETA ] };
	key <AC07> { [              Greek_xi,       Greek_XI ] };
	key <AC08> { [           Greek_kappa,    Greek_KAPPA ] };
	key <AC09> { [           Greek_lamda,    Greek_LAMDA ] };
	key <AC10> { [            dead_acute, dead_diaeresis ] };
	key <AC11> { [            apostrophe,       quotedbl ] };
	key <BKSL> { [             backslash,            bar,	brokenbar ] };

	key <LSGT> { [         guillemotleft, guillemotright,	brokenbar ] };
	key <AB01> { [            Greek_zeta,     Greek_ZETA ] };
	key <AB02> { [             Greek_chi,      Greek_CHI ] };
	key <AB03> { [             Greek_psi,      Greek_PSI,	copyright ] };
	key <AB04> { [           Greek_omega,    Greek_OMEGA ] };
	key <AB05> { [            Greek_beta,     Greek_BETA ] };
	key <AB06> { [              Greek_nu,       Greek_NU ] };
	key <AB07> { [              Greek_mu,       Greek_MU ] };
	key <AB08> { [                 comma,           less,	guillemotleft ] };
	key <AB09> { [                period,        greater,	guillemotright ] };
	key <AB10> { [                 slash,       question ] };

	include "level3(ralt_switch)"
};

alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/gr(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "simple" {
	include "gr(simple)"
};

partial alphanumeric_keys
	xkb_symbols "bare" {
	include "gr(bare)"
};

partial alphanumeric_keys
	xkb_symbols "extended" {
	include "gr(extended)"
};

partial alphanumeric_keys
	xkb_symbols "polytonic" {
	include "gr(polytonic)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "gr(nodeadkeys)"
};
